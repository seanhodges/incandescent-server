AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Server for the Incandescent app

# Transform section specifies one or more macros that AWS CloudFormation uses to process your template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html
Transform: AWS::Serverless-2016-10-31

# Shared configuration for all resources, more in
# https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    PermissionsBoundary: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/${AppId}-${AWS::Region}-PermissionsBoundary'

Parameters:
  AppId:
    Type: String

Resources:
  IncandescentLambdaBasicExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
  
  CloudWatchRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
            Action: 'sts:AssumeRole'
        Path: /
        ManagedPolicyArns:
          - 'arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs'

  CloudWatchAccount:
    Type: AWS::ApiGateway::Account
    Properties: 
      CloudWatchRoleArn: !GetAtt CloudWatchRole.Arn

  ApiAccessLogGroup:
    Type: AWS::Logs::LogGroup

  PythonRestClientLambdaLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: ./src/layers/restClientLambdaLayer/restClientLambdaLayer.zip
      CompatibleRuntimes:
        - python3.9

  ApiGateway:
    Type: AWS::Serverless::Api
    DependsOn: CloudWatchAccount
    Properties:
      DefinitionBody:
        'Fn::Transform':
          Name: 'AWS::Include'
          Parameters:
            Location: 'apigateway-openapi.yaml'
      Mode: overwrite
      StageName: prod
      EndpointConfiguration: REGIONAL
      Auth:
        ApiKeyRequired: true
        UsagePlan:
          UsagePlanName: Basic
          CreateUsagePlan: PER_API
          Quota:
            Limit: 10000
            Period: DAY
          Throttle:
            BurstLimit: 250
            RateLimit: 500
      AccessLogSetting:
        DestinationArn: !Sub ${ApiAccessLogGroup.Arn}
        Format: "{ 'requestId':'$context.requestId', 'ip': '$context.identity.sourceIp', 'caller':'$context.identity.caller', 'user':'$context.identity.user','requestTime':'$context.requestTime', 'xrayTraceId':'$context.xrayTraceId', 'wafResponseCode':'$context.wafResponseCode', 'httpMethod':'$context.httpMethod','resourcePath':'$context.resourcePath', 'status':'$context.status','protocol':'$context.protocol', 'responseLength':'$context.responseLength' }"

  SendOperationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src/handlers/sendOperation
      Handler: send-operation.lambda_handler
      Runtime: python3.9
      Layers:
        - !Ref PythonRestClientLambdaLayer
      Role: !GetAtt IncandescentLambdaBasicExecutionRole.Arn

  DeviceTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions: 
        - AttributeName: userId # "user01"
          AttributeType: S
        - AttributeName: deviceRef # "home/living-room/lights/side-lamp"
          AttributeType: S
        - AttributeName: featureSetId
          AttributeType: S
        - AttributeName: deviceId
          AttributeType: S
        - AttributeName: switchValue
          AttributeType: B
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
        - AttributeName: deviceRef
          KeyType: RANGE
      ProvisionedThroughput: 
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      LocalSecondaryIndexes:
          - IndexName: indexByFeatureSetId
            KeySchema: 
            - AttributeName: userId
              KeyType: HASH
            - AttributeName: featureSetId
              KeyType: RANGE
            Projection: 
              ProjectionType: INCLUDE
              NonKeyAttributes:
              - zoneName
              - zoneId
              - roomName
              - roomId
              - featureSetName
              - deviceName
              - deviceId
              - deviceRef
          - IndexName: indexByDeviceId
            KeySchema: 
            - AttributeName: userId
              KeyType: HASH
            - AttributeName: deviceId
              KeyType: RANGE
            Projection: 
              ProjectionType: INCLUDE
              NonKeyAttributes:
              - zoneName
              - zoneId
              - roomName
              - roomId
              - featureSetName
              - featureSetId
              - deviceName
              - deviceRef
          - IndexName: indexBySwitchValue
            KeySchema: 
            - AttributeName: userId
              KeyType: HASH
            - AttributeName: switchValue
              KeyType: RANGE
            Projection: 
              ProjectionType: ALL

Outputs:
  ServerApi:
    Description: URL for the server API
    Value: !Sub 'https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com'